import { HttpClient } from '@angular/common/http';
import { OAuthService } from 'angular-oauth2-oidc';

export function initializeOAuth(httpClient: HttpClient, oauthService: OAuthService): () => Promise<void> {
  return () => new Promise<void>((resolve) => {
    httpClient.get('/api/your-config-endpoint').subscribe((config: any) => {
      oauthService.configure({
        issuer: config.issuer,
        clientId: config.clientId,
        redirectUri: config.redirectUri,
        responseType: config.responseType,
        scope: config.scope,
        // Optional configurations
        // requireHttps: false,
        // showDebugInformation: true,
      });

      oauthService.loadDiscoveryDocumentAndTryLogin().then(() => {
        if (!oauthService.hasValidAccessToken()) {
          oauthService.initCodeFlow();
        }
        resolve();
      });
    });
  });
}


import { BrowserModule } from '@angular/platform-browser';
import { NgModule, APP_INITIALIZER } from '@angular/core';
import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { OAuthModule } from 'angular-oauth2-oidc';
import { HttpClientModule } from '@angular/common/http';
import { initializeOAuth } from './oauth-init';

@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    HttpClientModule,
    OAuthModule.forRoot()
  ],
  providers: [
    {
      provide: APP_INITIALIZER,
      useFactory: initializeOAuth,
      deps: [HttpClient, OAuthService],
      multi: true
    }
  ],
  bootstrap: [AppComponent]
})
export class AppModule { }


